generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ballot {
  ballotId                  String     @default(uuid())
  ballotURL                 Int        @id @default(autoincrement())
  ballotTitle               String
  ballotDescription         String
  createdAt                 DateTime   @default(now())
  expiry                    DateTime
  proof                     Json
  pollsterType              UserType
  pollsterNullifier         String     @unique
  pollsterSemaphoreGroupUrl String?
  pollsterName              String?
  pollsterUuid              String?
  pollsterCommitment        String?
  voterSemaphoreGroupUrls   String[]
  voterSemaphoreGroupRoots  String[]
  ballotType                BallotType
  polls                     Poll[]
  expiryNotif               ExpiryNotifStatus? @default(NONE)
}

model Poll {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  body      String
  options   String[]
  expiry    DateTime
  ballotURL Int?
  ballot    Ballot?  @relation(fields: [ballotURL], references: [ballotURL])
  votes     Vote[]
}

model Vote {
  id                     String   @id @default(uuid())
  pollId                 String
  voterType              UserType
  voterNullifier         String
  voterSemaphoreGroupUrl String?
  voterName              String?
  voterUuid              String?
  voterCommitment        String?
  voteIdx                Int
  proof                  Json
  poll                   Poll     @relation(fields: [pollId], references: [id])
}

enum UserType {
  ANON
  NONANON
}

enum BallotType {
  ADVISORYVOTE
  STRAWPOLL
  PCDPASSUSER
  ORGANIZERONLY
}

enum ExpiryNotifStatus {
  NONE
  WEEK
  DAY
  HOUR
}
